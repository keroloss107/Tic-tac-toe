name: CD - Build, Deploy, and Release Qt App

on:
  push:
    branches:
      - main
      - release

jobs:
  release:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install aqtinstall (Qt downloader)
      run: pip install aqtinstall

    - name: Install Qt 6.9.1 (msvc2022_64)
      run: python -m aqt install-qt windows desktop 6.9.1 win64_msvc2022_64 --outputdir ${{ github.workspace }}/Qt

    - name: Configure with CMake (Set Qt6_DIR explicitly)
      run: >
        cmake -S . -B build
        -DCMAKE_BUILD_TYPE=Release
        -DQt6_DIR="${{ github.workspace }}/Qt/6.9.1/msvc2022_64/lib/cmake/Qt6"

    - name: Build project
      run: cmake --build build --config Release

    - name: Run windeployqt to bundle DLLs
      run: |
        $qtPath = "${{ github.workspace }}\Qt\6.9.1\msvc2022_64\bin"
        & "$qtPath\windeployqt.exe" --dir build\Release build\Release\tictactoe.exe

    - name: Prepare Release Folder
      run: |
        mkdir release
        copy build\Release\tictactoe.exe release\
        xcopy build\Release\*.dll release\ /Y
        echo Advanced Tic Tac Toe Project with Qt GUI > release\README.txt

    - name: Auto-generate version number
      id: version
      run: |
        $sha = "${{ github.sha }}"
        $short = $sha.Substring(0, 7)
        echo "version=0.1.$short" >> $env:GITHUB_ENV

    - name: Create ZIP Archive
      run: powershell Compress-Archive -Path release\* -DestinationPath tictactoe-release-${{ env.version }}.zip

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ env.version }}
        tag_name: ${{ env.version }}
        files: tictactoe-release-${{ env.version }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
